Answers to Chart:
--------------------------------------------------------------------------
|     Dynamic Array |     LinkedListBag   |     Ordered Array Bag         |
|Add:   O(1)+       |          O(1)       |              O(N)             |
|Contains: O(N)     |         O(N)        |             O(log(N))         |
|Remove: O(N)       |          O(N)       |              O(N)             |
---------------------------------------------------------------------------


Answers to questions:
1. Complexity of binary search algorithm is O(log(N))
2. Complexity of contains for orderedArrayBag is O(log(N))
3. Complexity of addAt is O(N)
4. Complexity of add for orderedArrayBag is O(N)
5. Complexity of removeAt is O(N)





void dyArrayAddAt (struct dyArray *da, int index, TYPE newElement) {
   int i;
   assert(index >= 0 && index <= da->size);
   if (da->size >= da->capacity)
                _dyArrayDoubleCapacity(da);
   
   /* you get to fill this in */
   
   
   
   
   
}



 int orderedArrayContains (struct dyArray *da, TYPE testElement) {










}

 void orderedArrayRemove (struct dyArray *da, TYPE testElement) {

 







}

